{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajgre\\\\Drepheus-Portal\\\\src\\\\components\\\\SimpleMatrixRain.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useRef, useEffect, useMemo, useState, useCallback } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { gsap } from 'gsap';\nimport { motion } from 'framer-motion';\nimport * as THREE from 'three';\n\n// Matrix characters including Japanese katakana, Latin letters, and numbers\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MATRIX_CHARS = ['ｱ', 'ｲ', 'ｳ', 'ｴ', 'ｵ', 'ｶ', 'ｷ', 'ｸ', 'ｹ', 'ｺ', 'ｻ', 'ｼ', 'ｽ', 'ｾ', 'ｿ', 'ﾀ', 'ﾁ', 'ﾂ', 'ﾃ', 'ﾄ', 'ﾅ', 'ﾆ', 'ﾇ', 'ﾈ', 'ﾉ', 'ﾊ', 'ﾋ', 'ﾌ', 'ﾍ', 'ﾎ', 'ﾏ', 'ﾐ', 'ﾑ', 'ﾒ', 'ﾓ', 'ﾔ', 'ﾕ', 'ﾖ', 'ﾗ', 'ﾘ', 'ﾙ', 'ﾚ', 'ﾛ', 'ﾜ', 'ｦ', 'ﾝ', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '_', '=', '+', '[', ']', '{', '}', '|', '\\\\', ';', ':', '\"', \"'\", '<', '>', ',', '.', '?', '/'];\n\n// Generate a random matrix character\nconst getRandomChar = () => MATRIX_CHARS[Math.floor(Math.random() * MATRIX_CHARS.length)];\n\n// Color themes\nconst THEMES = {\n  green: {\n    primary: '#00ff00',\n    secondary: '#003300',\n    bright: '#66ff66'\n  },\n  blue: {\n    primary: '#00ffff',\n    secondary: '#003333',\n    bright: '#66ffff'\n  },\n  gold: {\n    primary: '#ffd700',\n    secondary: '#333300',\n    bright: '#ffff66'\n  },\n  white: {\n    primary: '#ffffff',\n    secondary: '#333333',\n    bright: '#ffffff'\n  }\n};\n\n// Simple character component using Text\nfunction MatrixChar({\n  position,\n  char,\n  brightness,\n  theme,\n  glitchIntensity\n}) {\n  _s();\n  const meshRef = useRef();\n  const materialRef = useRef();\n  const color = useMemo(() => {\n    const colors = THEMES[theme];\n    if (brightness > 0.8) return colors.bright;\n    if (brightness > 0.5) return colors.primary;\n    return colors.secondary;\n  }, [brightness, theme]);\n  useFrame(state => {\n    if (meshRef.current && materialRef.current) {\n      // Apply glitch effect\n      if (Math.random() < glitchIntensity) {\n        const glitchOffset = (Math.random() - 0.5) * 0.1;\n        meshRef.current.position.x = position[0] + glitchOffset;\n        meshRef.current.position.y = position[1] + glitchOffset;\n      } else {\n        meshRef.current.position.x = position[0];\n        meshRef.current.position.y = position[1];\n      }\n\n      // Flickering effect\n      const flicker = 0.8 + Math.sin(state.clock.elapsedTime * 10) * 0.2;\n      materialRef.current.opacity = brightness * flicker;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    position: [...position, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [0.4, 0.6]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      ref: materialRef,\n      color: color,\n      transparent: true,\n      opacity: brightness\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n// Single rain stream component\n_s(MatrixChar, \"9RAbhNsMDofGQvsNywB7NISM9Po=\", false, function () {\n  return [useFrame];\n});\n_c = MatrixChar;\nfunction RainStream({\n  x,\n  speed,\n  length,\n  theme,\n  depth,\n  mousePosition,\n  glitchIntensity\n}) {\n  _s2();\n  const groupRef = useRef();\n  const [chars, setChars] = useState([]);\n  const [positions, setPositions] = useState([]);\n\n  // Initialize stream\n  useEffect(() => {\n    const streamChars = Array.from({\n      length\n    }, () => ({\n      char: getRandomChar(),\n      brightness: Math.random(),\n      id: Math.random()\n    }));\n    setChars(streamChars);\n    const streamPositions = streamChars.map((_, index) => [x, 20 - index * 0.8, depth]);\n    setPositions(streamPositions);\n  }, [x, length, depth]);\n\n  // Animation frame\n  useFrame(state => {\n    if (groupRef.current) {\n      // Move stream down\n      groupRef.current.position.y -= speed;\n\n      // Reset when off screen\n      if (groupRef.current.position.y < -30) {\n        groupRef.current.position.y = 25;\n\n        // Regenerate characters for variety\n        if (Math.random() < 0.2) {\n          setChars(chars.map(char => ({\n            ...char,\n            char: Math.random() < 0.5 ? getRandomChar() : char.char,\n            brightness: Math.random()\n          })));\n        }\n      }\n\n      // Parallax effect based on mouse position\n      if (mousePosition) {\n        const parallaxStrength = 0.01;\n        const offsetX = (mousePosition.x - 0.5) * parallaxStrength * depth;\n        const offsetZ = (mousePosition.y - 0.5) * parallaxStrength * depth;\n        groupRef.current.position.x = x + offsetX;\n        groupRef.current.position.z = depth + offsetZ;\n\n        // Apply subtle rotation based on mouse movement\n        const rotationStrength = 0.005;\n        groupRef.current.rotation.z = (mousePosition.x - 0.5) * rotationStrength;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupRef,\n    children: chars.map((charData, index) => /*#__PURE__*/_jsxDEV(MatrixChar, {\n      position: [0, -index * 0.8, 0],\n      char: charData.char,\n      brightness: charData.brightness * (1 - index / length),\n      theme: theme,\n      glitchIntensity: glitchIntensity\n    }, `${charData.id}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n// Particle system for ambient effects\n_s2(RainStream, \"P+CcRlnqYcpKyuy92Ojhca26AX8=\", false, function () {\n  return [useFrame];\n});\n_c2 = RainStream;\nfunction AmbientParticles({\n  theme,\n  mousePosition\n}) {\n  _s3();\n  const pointsRef = useRef();\n  const particleCount = 30;\n  const particles = useMemo(() => {\n    const positions = new Float32Array(particleCount * 3);\n    const colors = new Float32Array(particleCount * 3);\n    const color = new THREE.Color(THEMES[theme].primary);\n    for (let i = 0; i < particleCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 40;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 40;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 15;\n      colors[i * 3] = color.r;\n      colors[i * 3 + 1] = color.g;\n      colors[i * 3 + 2] = color.b;\n    }\n    return {\n      positions,\n      colors\n    };\n  }, [theme]);\n  useFrame(state => {\n    if (pointsRef.current) {\n      const positions = pointsRef.current.geometry.attributes.position.array;\n      for (let i = 0; i < particleCount; i++) {\n        positions[i * 3 + 1] -= 0.01;\n        if (positions[i * 3 + 1] < -20) {\n          positions[i * 3 + 1] = 20;\n          positions[i * 3] = (Math.random() - 0.5) * 40;\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 15;\n        }\n\n        // Mouse interaction\n        if (mousePosition) {\n          const dx = positions[i * 3] - mousePosition.x * 20;\n          const dy = positions[i * 3 + 1] - mousePosition.y * 20;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 3) {\n            positions[i * 3] += dx / distance * 0.05;\n            positions[i * 3 + 1] += dy / distance * 0.05;\n          }\n        }\n      }\n      pointsRef.current.geometry.attributes.position.needsUpdate = true;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    ref: pointsRef,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      children: [/*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        array: particles.positions,\n        count: particleCount,\n        itemSize: 3,\n        attach: \"attributes-position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        array: particles.colors,\n        count: particleCount,\n        itemSize: 3,\n        attach: \"attributes-color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      size: 0.08,\n      transparent: true,\n      opacity: 0.6,\n      vertexColors: true,\n      blending: THREE.AdditiveBlending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Three.js scene component\n_s3(AmbientParticles, \"k3CNW3lhn88pPP3Q7Rpia6GUBSA=\", false, function () {\n  return [useFrame];\n});\n_c3 = AmbientParticles;\nfunction MatrixScene({\n  theme,\n  mousePosition,\n  settings\n}) {\n  _s4();\n  const {\n    viewport\n  } = useThree();\n  const streamCount = Math.min(settings.streamDensity, 60); // Cap for performance\n\n  const streams = useMemo(() => {\n    return Array.from({\n      length: streamCount\n    }, (_, index) => ({\n      x: index / streamCount * viewport.width - viewport.width / 2,\n      speed: 0.02 + Math.random() * 0.04,\n      length: 12 + Math.floor(Math.random() * 15),\n      depth: -3 + Math.random() * 6,\n      id: index\n    }));\n  }, [streamCount, viewport.width]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [0, 0, 8],\n      intensity: 0.3,\n      color: THEMES[theme].primary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), streams.map(stream => /*#__PURE__*/_jsxDEV(RainStream, {\n      x: stream.x,\n      speed: stream.speed,\n      length: stream.length,\n      theme: theme,\n      depth: stream.depth,\n      mousePosition: mousePosition,\n      glitchIntensity: settings.glitchIntensity\n    }, stream.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)), settings.ambientParticles && /*#__PURE__*/_jsxDEV(AmbientParticles, {\n      theme: theme,\n      mousePosition: mousePosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n// Main MatrixRain component\n_s4(MatrixScene, \"Z3fv8XjShpvY9u7xtSoDMmrS2ss=\", false, function () {\n  return [useThree];\n});\n_c4 = MatrixScene;\nconst SimpleMatrixRain = ({\n  theme = 'green',\n  className = '',\n  settings = {\n    streamDensity: 40,\n    glitchIntensity: 0.02,\n    ambientParticles: true,\n    motionBlur: true,\n    interactive: true\n  }\n}) => {\n  _s5();\n  const containerRef = useRef();\n  const [mousePosition, setMousePosition] = useState({\n    x: 0.5,\n    y: 0.5\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // Mouse tracking for parallax effect\n  const handleMouseMove = useCallback(event => {\n    var _containerRef$current;\n    if (!settings.interactive) return;\n    const rect = (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect();\n    if (rect) {\n      const x = (event.clientX - rect.left) / rect.width;\n      const y = (event.clientY - rect.top) / rect.height;\n      setMousePosition({\n        x,\n        y\n      });\n    }\n  }, [settings.interactive]);\n\n  // Initialize component\n  useEffect(() => {\n    setIsLoaded(true);\n\n    // GSAP entrance animation\n    if (containerRef.current) {\n      gsap.fromTo(containerRef.current, {\n        opacity: 0\n      }, {\n        opacity: 1,\n        duration: 1.5,\n        ease: 'power2.out'\n      });\n    }\n  }, []);\n\n  // Performance optimization: throttle mouse events\n  useEffect(() => {\n    let timeoutId;\n    const throttledMouseMove = event => {\n      if (timeoutId) return;\n      timeoutId = setTimeout(() => {\n        handleMouseMove(event);\n        timeoutId = null;\n      }, 16); // ~60fps\n    };\n    if (containerRef.current && settings.interactive) {\n      containerRef.current.addEventListener('mousemove', throttledMouseMove);\n      return () => {\n        if (containerRef.current) {\n          containerRef.current.removeEventListener('mousemove', throttledMouseMove);\n        }\n        if (timeoutId) clearTimeout(timeoutId);\n      };\n    }\n  }, [handleMouseMove, settings.interactive]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: containerRef,\n    className: `fixed inset-0 overflow-hidden bg-black ${className}`,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: isLoaded ? 1 : 0\n    },\n    transition: {\n      duration: 1.5\n    },\n    style: {\n      background: 'radial-gradient(ellipse at center, #000000 0%, #000000 100%)',\n      filter: settings.motionBlur ? 'blur(0.3px)' : 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-gradient-to-b from-black via-gray-900 to-black opacity-30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 0, 12],\n        fov: 75,\n        near: 0.1,\n        far: 1000\n      },\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 1\n      },\n      dpr: [1, 2] // Responsive pixel ratio for performance\n      ,\n      performance: {\n        min: 0.5\n      } // Performance threshold\n      ,\n      gl: {\n        antialias: false,\n        // Disable for performance\n        alpha: false,\n        powerPreference: \"high-performance\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MatrixScene, {\n        theme: theme,\n        mousePosition: mousePosition,\n        settings: settings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 pointer-events-none opacity-20\",\n      style: {\n        background: `linear-gradient(45deg, transparent 0%, ${THEMES[theme].primary}05 50%, transparent 100%)`,\n        zIndex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 pointer-events-none opacity-5\",\n      style: {\n        background: 'repeating-linear-gradient(0deg, transparent, transparent 2px, rgba(255,255,255,0.1) 2px, rgba(255,255,255,0.1) 4px)',\n        zIndex: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n};\n_s5(SimpleMatrixRain, \"T7YhgSu+WIbsJC0Lz2u7Hp/pYRs=\");\n_c5 = SimpleMatrixRain;\nexport default SimpleMatrixRain;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MatrixChar\");\n$RefreshReg$(_c2, \"RainStream\");\n$RefreshReg$(_c3, \"AmbientParticles\");\n$RefreshReg$(_c4, \"MatrixScene\");\n$RefreshReg$(_c5, \"SimpleMatrixRain\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","useState","useCallback","Canvas","useFrame","useThree","gsap","motion","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","MATRIX_CHARS","getRandomChar","Math","floor","random","length","THEMES","green","primary","secondary","bright","blue","gold","white","MatrixChar","position","char","brightness","theme","glitchIntensity","_s","meshRef","materialRef","color","colors","state","current","glitchOffset","x","y","flicker","sin","clock","elapsedTime","opacity","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","transparent","_c","RainStream","speed","depth","mousePosition","_s2","groupRef","chars","setChars","positions","setPositions","streamChars","Array","from","id","streamPositions","map","_","index","parallaxStrength","offsetX","offsetZ","z","rotationStrength","rotation","charData","_c2","AmbientParticles","_s3","pointsRef","particleCount","particles","Float32Array","Color","i","r","g","b","geometry","attributes","array","dx","dy","distance","sqrt","needsUpdate","count","itemSize","attach","size","vertexColors","blending","AdditiveBlending","_c3","MatrixScene","settings","_s4","viewport","streamCount","min","streamDensity","streams","width","intensity","stream","ambientParticles","_c4","SimpleMatrixRain","className","motionBlur","interactive","_s5","containerRef","setMousePosition","isLoaded","setIsLoaded","handleMouseMove","event","_containerRef$current","rect","getBoundingClientRect","clientX","left","clientY","top","height","fromTo","duration","ease","timeoutId","throttledMouseMove","setTimeout","addEventListener","removeEventListener","clearTimeout","div","initial","animate","transition","style","background","filter","camera","fov","near","far","zIndex","dpr","performance","gl","antialias","alpha","powerPreference","_c5","$RefreshReg$"],"sources":["C:/Users/ajgre/Drepheus-Portal/src/components/SimpleMatrixRain.jsx"],"sourcesContent":["import React, { useRef, useEffect, useMemo, useState, useCallback } from 'react';\r\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\r\nimport { gsap } from 'gsap';\r\nimport { motion } from 'framer-motion';\r\nimport * as THREE from 'three';\r\n\r\n// Matrix characters including Japanese katakana, Latin letters, and numbers\r\nconst MATRIX_CHARS = [\r\n  'ｱ', 'ｲ', 'ｳ', 'ｴ', 'ｵ', 'ｶ', 'ｷ', 'ｸ', 'ｹ', 'ｺ',\r\n  'ｻ', 'ｼ', 'ｽ', 'ｾ', 'ｿ', 'ﾀ', 'ﾁ', 'ﾂ', 'ﾃ', 'ﾄ',\r\n  'ﾅ', 'ﾆ', 'ﾇ', 'ﾈ', 'ﾉ', 'ﾊ', 'ﾋ', 'ﾌ', 'ﾍ', 'ﾎ',\r\n  'ﾏ', 'ﾐ', 'ﾑ', 'ﾒ', 'ﾓ', 'ﾔ', 'ﾕ', 'ﾖ', 'ﾗ', 'ﾘ',\r\n  'ﾙ', 'ﾚ', 'ﾛ', 'ﾜ', 'ｦ', 'ﾝ',\r\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',\r\n  'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\r\n  'U', 'V', 'W', 'X', 'Y', 'Z',\r\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n  '!', '@', '#', '$', '%', '^', '&', '*', '(', ')',\r\n  '-', '_', '=', '+', '[', ']', '{', '}', '|', '\\\\',\r\n  ';', ':', '\"', \"'\", '<', '>', ',', '.', '?', '/'\r\n];\r\n\r\n// Generate a random matrix character\r\nconst getRandomChar = () => MATRIX_CHARS[Math.floor(Math.random() * MATRIX_CHARS.length)];\r\n\r\n// Color themes\r\nconst THEMES = {\r\n  green: { primary: '#00ff00', secondary: '#003300', bright: '#66ff66' },\r\n  blue: { primary: '#00ffff', secondary: '#003333', bright: '#66ffff' },\r\n  gold: { primary: '#ffd700', secondary: '#333300', bright: '#ffff66' },\r\n  white: { primary: '#ffffff', secondary: '#333333', bright: '#ffffff' }\r\n};\r\n\r\n// Simple character component using Text\r\nfunction MatrixChar({ position, char, brightness, theme, glitchIntensity }) {\r\n  const meshRef = useRef();\r\n  const materialRef = useRef();\r\n  \r\n  const color = useMemo(() => {\r\n    const colors = THEMES[theme];\r\n    if (brightness > 0.8) return colors.bright;\r\n    if (brightness > 0.5) return colors.primary;\r\n    return colors.secondary;\r\n  }, [brightness, theme]);\r\n\r\n  useFrame((state) => {\r\n    if (meshRef.current && materialRef.current) {\r\n      // Apply glitch effect\r\n      if (Math.random() < glitchIntensity) {\r\n        const glitchOffset = (Math.random() - 0.5) * 0.1;\r\n        meshRef.current.position.x = position[0] + glitchOffset;\r\n        meshRef.current.position.y = position[1] + glitchOffset;\r\n      } else {\r\n        meshRef.current.position.x = position[0];\r\n        meshRef.current.position.y = position[1];\r\n      }\r\n      \r\n      // Flickering effect\r\n      const flicker = 0.8 + Math.sin(state.clock.elapsedTime * 10) * 0.2;\r\n      materialRef.current.opacity = brightness * flicker;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <mesh ref={meshRef} position={[...position, 0]}>\r\n      <planeGeometry args={[0.4, 0.6]} />\r\n      <meshBasicMaterial\r\n        ref={materialRef}\r\n        color={color}\r\n        transparent\r\n        opacity={brightness}\r\n      />\r\n    </mesh>\r\n  );\r\n}\r\n\r\n// Single rain stream component\r\nfunction RainStream({ \r\n  x, \r\n  speed, \r\n  length, \r\n  theme, \r\n  depth, \r\n  mousePosition,\r\n  glitchIntensity \r\n}) {\r\n  const groupRef = useRef();\r\n  const [chars, setChars] = useState([]);\r\n  const [positions, setPositions] = useState([]);\r\n  \r\n  // Initialize stream\r\n  useEffect(() => {\r\n    const streamChars = Array.from({ length }, () => ({\r\n      char: getRandomChar(),\r\n      brightness: Math.random(),\r\n      id: Math.random()\r\n    }));\r\n    setChars(streamChars);\r\n    \r\n    const streamPositions = streamChars.map((_, index) => [\r\n      x,\r\n      20 - index * 0.8,\r\n      depth\r\n    ]);\r\n    setPositions(streamPositions);\r\n  }, [x, length, depth]);\r\n  \r\n  // Animation frame\r\n  useFrame((state) => {\r\n    if (groupRef.current) {\r\n      // Move stream down\r\n      groupRef.current.position.y -= speed;\r\n      \r\n      // Reset when off screen\r\n      if (groupRef.current.position.y < -30) {\r\n        groupRef.current.position.y = 25;\r\n        \r\n        // Regenerate characters for variety\r\n        if (Math.random() < 0.2) {\r\n          setChars(chars.map(char => ({\r\n            ...char,\r\n            char: Math.random() < 0.5 ? getRandomChar() : char.char,\r\n            brightness: Math.random()\r\n          })));\r\n        }\r\n      }\r\n      \r\n      // Parallax effect based on mouse position\r\n      if (mousePosition) {\r\n        const parallaxStrength = 0.01;\r\n        const offsetX = (mousePosition.x - 0.5) * parallaxStrength * depth;\r\n        const offsetZ = (mousePosition.y - 0.5) * parallaxStrength * depth;\r\n        \r\n        groupRef.current.position.x = x + offsetX;\r\n        groupRef.current.position.z = depth + offsetZ;\r\n        \r\n        // Apply subtle rotation based on mouse movement\r\n        const rotationStrength = 0.005;\r\n        groupRef.current.rotation.z = (mousePosition.x - 0.5) * rotationStrength;\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      {chars.map((charData, index) => (\r\n        <MatrixChar\r\n          key={`${charData.id}-${index}`}\r\n          position={[0, -index * 0.8, 0]}\r\n          char={charData.char}\r\n          brightness={charData.brightness * (1 - index / length)}\r\n          theme={theme}\r\n          glitchIntensity={glitchIntensity}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\n\r\n// Particle system for ambient effects\r\nfunction AmbientParticles({ theme, mousePosition }) {\r\n  const pointsRef = useRef();\r\n  const particleCount = 30;\r\n  \r\n  const particles = useMemo(() => {\r\n    const positions = new Float32Array(particleCount * 3);\r\n    const colors = new Float32Array(particleCount * 3);\r\n    const color = new THREE.Color(THEMES[theme].primary);\r\n    \r\n    for (let i = 0; i < particleCount; i++) {\r\n      positions[i * 3] = (Math.random() - 0.5) * 40;\r\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 40;\r\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 15;\r\n      \r\n      colors[i * 3] = color.r;\r\n      colors[i * 3 + 1] = color.g;\r\n      colors[i * 3 + 2] = color.b;\r\n    }\r\n    \r\n    return { positions, colors };\r\n  }, [theme]);\r\n  \r\n  useFrame((state) => {\r\n    if (pointsRef.current) {\r\n      const positions = pointsRef.current.geometry.attributes.position.array;\r\n      \r\n      for (let i = 0; i < particleCount; i++) {\r\n        positions[i * 3 + 1] -= 0.01;\r\n        \r\n        if (positions[i * 3 + 1] < -20) {\r\n          positions[i * 3 + 1] = 20;\r\n          positions[i * 3] = (Math.random() - 0.5) * 40;\r\n          positions[i * 3 + 2] = (Math.random() - 0.5) * 15;\r\n        }\r\n        \r\n        // Mouse interaction\r\n        if (mousePosition) {\r\n          const dx = positions[i * 3] - mousePosition.x * 20;\r\n          const dy = positions[i * 3 + 1] - mousePosition.y * 20;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          \r\n          if (distance < 3) {\r\n            positions[i * 3] += (dx / distance) * 0.05;\r\n            positions[i * 3 + 1] += (dy / distance) * 0.05;\r\n          }\r\n        }\r\n      }\r\n      \r\n      pointsRef.current.geometry.attributes.position.needsUpdate = true;\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <points ref={pointsRef}>\r\n      <bufferGeometry>\r\n        <bufferAttribute\r\n          array={particles.positions}\r\n          count={particleCount}\r\n          itemSize={3}\r\n          attach=\"attributes-position\"\r\n        />\r\n        <bufferAttribute\r\n          array={particles.colors}\r\n          count={particleCount}\r\n          itemSize={3}\r\n          attach=\"attributes-color\"\r\n        />\r\n      </bufferGeometry>\r\n      <pointsMaterial\r\n        size={0.08}\r\n        transparent\r\n        opacity={0.6}\r\n        vertexColors\r\n        blending={THREE.AdditiveBlending}\r\n      />\r\n    </points>\r\n  );\r\n}\r\n\r\n// Main Three.js scene component\r\nfunction MatrixScene({ theme, mousePosition, settings }) {\r\n  const { viewport } = useThree();\r\n  const streamCount = Math.min(settings.streamDensity, 60); // Cap for performance\r\n  \r\n  const streams = useMemo(() => {\r\n    return Array.from({ length: streamCount }, (_, index) => ({\r\n      x: (index / streamCount) * viewport.width - viewport.width / 2,\r\n      speed: 0.02 + Math.random() * 0.04,\r\n      length: 12 + Math.floor(Math.random() * 15),\r\n      depth: -3 + Math.random() * 6,\r\n      id: index\r\n    }));\r\n  }, [streamCount, viewport.width]);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <pointLight position={[0, 0, 8]} intensity={0.3} color={THEMES[theme].primary} />\r\n      \r\n      {streams.map((stream) => (\r\n        <RainStream\r\n          key={stream.id}\r\n          x={stream.x}\r\n          speed={stream.speed}\r\n          length={stream.length}\r\n          theme={theme}\r\n          depth={stream.depth}\r\n          mousePosition={mousePosition}\r\n          glitchIntensity={settings.glitchIntensity}\r\n        />\r\n      ))}\r\n      \r\n      {settings.ambientParticles && (\r\n        <AmbientParticles theme={theme} mousePosition={mousePosition} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// Main MatrixRain component\r\nconst SimpleMatrixRain = ({ \r\n  theme = 'green',\r\n  className = '',\r\n  settings = {\r\n    streamDensity: 40,\r\n    glitchIntensity: 0.02,\r\n    ambientParticles: true,\r\n    motionBlur: true,\r\n    interactive: true\r\n  }\r\n}) => {\r\n  const containerRef = useRef();\r\n  const [mousePosition, setMousePosition] = useState({ x: 0.5, y: 0.5 });\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  // Mouse tracking for parallax effect\r\n  const handleMouseMove = useCallback((event) => {\r\n    if (!settings.interactive) return;\r\n    \r\n    const rect = containerRef.current?.getBoundingClientRect();\r\n    if (rect) {\r\n      const x = (event.clientX - rect.left) / rect.width;\r\n      const y = (event.clientY - rect.top) / rect.height;\r\n      setMousePosition({ x, y });\r\n    }\r\n  }, [settings.interactive]);\r\n\r\n  // Initialize component\r\n  useEffect(() => {\r\n    setIsLoaded(true);\r\n    \r\n    // GSAP entrance animation\r\n    if (containerRef.current) {\r\n      gsap.fromTo(\r\n        containerRef.current,\r\n        { opacity: 0 },\r\n        { opacity: 1, duration: 1.5, ease: 'power2.out' }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  // Performance optimization: throttle mouse events\r\n  useEffect(() => {\r\n    let timeoutId;\r\n    const throttledMouseMove = (event) => {\r\n      if (timeoutId) return;\r\n      timeoutId = setTimeout(() => {\r\n        handleMouseMove(event);\r\n        timeoutId = null;\r\n      }, 16); // ~60fps\r\n    };\r\n\r\n    if (containerRef.current && settings.interactive) {\r\n      containerRef.current.addEventListener('mousemove', throttledMouseMove);\r\n      return () => {\r\n        if (containerRef.current) {\r\n          containerRef.current.removeEventListener('mousemove', throttledMouseMove);\r\n        }\r\n        if (timeoutId) clearTimeout(timeoutId);\r\n      };\r\n    }\r\n  }, [handleMouseMove, settings.interactive]);\r\n\r\n  return (\r\n    <motion.div\r\n      ref={containerRef}\r\n      className={`fixed inset-0 overflow-hidden bg-black ${className}`}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: isLoaded ? 1 : 0 }}\r\n      transition={{ duration: 1.5 }}\r\n      style={{\r\n        background: 'radial-gradient(ellipse at center, #000000 0%, #000000 100%)',\r\n        filter: settings.motionBlur ? 'blur(0.3px)' : 'none'\r\n      }}\r\n    >\r\n      {/* Background gradient overlay */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-black via-gray-900 to-black opacity-30\" />\r\n      \r\n      {/* Three.js Canvas */}\r\n      <Canvas\r\n        camera={{ \r\n          position: [0, 0, 12], \r\n          fov: 75,\r\n          near: 0.1,\r\n          far: 1000\r\n        }}\r\n        style={{ \r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          zIndex: 1\r\n        }}\r\n        dpr={[1, 2]} // Responsive pixel ratio for performance\r\n        performance={{ min: 0.5 }} // Performance threshold\r\n        gl={{ \r\n          antialias: false, // Disable for performance\r\n          alpha: false,\r\n          powerPreference: \"high-performance\"\r\n        }}\r\n      >\r\n        <MatrixScene \r\n          theme={theme} \r\n          mousePosition={mousePosition}\r\n          settings={settings}\r\n        />\r\n      </Canvas>\r\n      \r\n      {/* Additional CSS overlay effects */}\r\n      <div \r\n        className=\"absolute inset-0 pointer-events-none opacity-20\"\r\n        style={{\r\n          background: `linear-gradient(45deg, transparent 0%, ${THEMES[theme].primary}05 50%, transparent 100%)`,\r\n          zIndex: 2\r\n        }}\r\n      />\r\n      \r\n      {/* Scanline effect */}\r\n      <div \r\n        className=\"absolute inset-0 pointer-events-none opacity-5\"\r\n        style={{\r\n          background: 'repeating-linear-gradient(0deg, transparent, transparent 2px, rgba(255,255,255,0.1) 2px, rgba(255,255,255,0.1) 4px)',\r\n          zIndex: 3\r\n        }}\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default SimpleMatrixRain;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}